#!/bin/bash
#
# createapp.sh
#
# Created by Vasek (vaclav@spirhanzl.cz) on 2012-07-13.
# Based on bash script template from halfgaar 
#       http://blog.bigsmoke.us/2011/01/05/bash-script-template
#
# Template bash script, for when you need something overengineerd :)

#
# set -n # Uncomment to check script syntax, without execution.
# # NOTE: Do not forget to put the comment back in or
# # the shell script will not execute!
# set -x # Uncomment to debug this shell script
#
 
# Hack prevention
# PATH="/sbin:/usr/sbin:/bin:/usr/bin"
 
# Error codes
wrong_params=5
interrupted=99
default_error=1
 
# Function to echo in color. Don't supply color for normal color.
echo_color()
{
  message="$1"
  color="$2"
 
  red_begin="\033[01;31m"
  green_begin="\033[01;32m"
  yellow_begin="\033[01;33m"
  color_end="\033[00m"
 
  # Set color to normal when there is no color
  [ ! "$color" ] && color_begin="$color_end"
 
  if [ "$color" == "red" ]; then
    color_begin="$red_begin"
  fi
 
  if [ "$color" == "green" ]; then
    color_begin="$green_begin"
  fi
 
  if [ "$color" == "yellow" ]; then
    color_begin="$yellow_begin"
  fi
 
  echo -e "$color_begin" "$message" "$color_end"
}
 
end()
{
  message="$1"
  exit_status="$2"
 
  if [ -z "$exit_status" ]; then
    exit_status="0"
  fi
 
  if [ ! "$exit_status" -eq "0" ]; then
    echo_color "$message" "red"
  else
    echo_color "$message" "green"
  fi
 
  if [ "$exit_status" -eq "$wrong_params" ]; then
    dohelp
  fi
 
  exit $exit_status
}
 
# Define function to call when SIGTERM is received
#   1 - Terminal line hangup
#   2 - Interrupt program
#   3 - Quit program
#  15 - Software termination signal
trap "end 'Interrupted' $interrupted" 1 2 3 15
 
dohelp()
{
  echo ""
  echo "createapp script"
  echo ""
  echo "    creates app bundle for morinus python program"
  echo ""
 
  # Exit because you don't want the script to do anything after displaying help
  exit 
}

prev_params=$* 
while [ -n "$*" ]; do
  flag=$1
  value=$2
 
  case "$flag" in
    "--help")
      dohelp
    ;;
  esac
 
  shift
done
 
# if [ -z "$option1" ]; then
# end "option1 not given" $wrong_params
# fi

#
#   --- start of main script ---
#

# here is my invention :-)
if [ ! -f "./setup.py" ]; then
    end "File setup.py does not exist in current working directory" 1
fi

# clean distribution
python setup.py clean
rm -rfd build dist

# build distribution
echo "--> setup.py with params = $prev_params"
python setup.py py2app $prev_params

# copy Python frameworks - dirty hack :-)
echo ""
echo "--> copying Python.framework ..."
cp -Rv /Projects/Frameworks/Python.framework dist/morinus.app/Contents/Frameworks

# rename App bundle
mv dist/morinus.app dist/Morinus.app